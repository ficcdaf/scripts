# Example 7
#     Capslock  will  behave  as control in all instances except when used in con‚Äê
#     junction with 'h/j/k/l' in which case it will produce arrow keys. If tapped,
#     it will function as escape.
#
#              [main]
#              capslock = overload(capslock, esc)
#              esc = capslock
#
#              [capslock:C]
#              h = left
#              k = up
#              j = down
#              l = right
[global]
# overload_tap_timeout = 500
layer_indicator = 1
oneshot_timeout = 500
[ids]

0001:0001:a38e6885
0001:0001:70533846

[main]

# capslock = lettermod(nav, backspace, 150, 200)
# space = shift?
space = oneshot(shift)
# lalt = space/ctrl?
leftalt = lettermod(control, space, 150, 200)
# leftalt = leftmeta
# hold tab/leftbrace = meta?
# tab = overload(meta, esc)
tab = esc
# leftbrace = overload(meta, tab)
leftbrace = tab
# lshift = z?
shift = z
# meta = lalt?
# leftmeta = leftalt
capslock = backspace
sysrq = layer(symbol)

rightalt = lettermod(meta, enter, 150, 200)
# sysrq = leftalt
# space = lettermod(nav, space, 150, 200)
# enter = lettermod(alt, enter, 150, 200)
# shift = oneshot(shift)
leftmeta = leftalt
# leftalt = leftmeta
# tab = esc
backslash = leftmeta
# leftbrace=tab

# wakeup = layer(symbol)
# wakeup+rightalt = layer(symbol)

q=q
w=w
e=f
r=p
t=b
y=j
u=l
i=u
o=y
p=;
a=a
s=r
d=s
f=t
g=g
h=m
j=n
k=e
l=i
;=o
z=x
x=c
c=d
v=v
b=z
n=k
m=h

[nav:C]
h=left
j=down
k=up
l=right
rightalt = layer(symbol)

[symbol]
a=^
s=-
d={
f=}
g=~
h=left
j=down
k=up
l=right
semicolon=$
'=|
q=@
w=!
e=(
r=)
u=&
i=*
o==
p=:
z=_
x=[
c=]
v=%
m=#
,=grave
.=+
/=\

